---
const stats = [
  { value: "98%", label: "Threat Detection Rate" },
  { value: "500+", label: "Enterprise Clients" },
  { value: "30min", label: "Average Response Time" },
];
---

<section class="py-12 bg-muted/50">
  <div class="container mx-auto px-4">
    <div 
      class="grid grid-cols-1 md:grid-cols-3 gap-8"
      data-animate="fade-up"
    >
      {stats.map((stat, index) => (
        <div class="text-center">
          <p class="text-4xl font-bold text-primary mb-2">{stat.value}</p>
          <p class="text-muted-foreground">{stat.label}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  [data-animate="fade-up"] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }
  
  [data-animate="fade-up"].visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  function handleStatsAnimation() {
    const animatedElement = document.querySelector('[data-animate="fade-up"]');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
    
    if (animatedElement) {
      observer.observe(animatedElement);
    }
  }
  
  document.addEventListener('astro:page-load', handleStatsAnimation);
</script>